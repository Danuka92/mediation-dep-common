<?xml version="1.0" encoding="UTF-8"?>
<sequence name="com.wso2telco.dep.common.response.exceptions.Sequence"
  onError="fault"
  trace="disable" xmlns="http://ws.apache.org/ns/synapse">
  <switch source="$ctx:exceptionType">
    <case regex="^SERVICE_EXCEPTION$">
      <property name="exceptionType" scope="default" type="STRING" value="serviceException"/>
    </case>
    <case regex="^POLICY_EXCEPTION$">
      <property name="exceptionType" scope="default" type="STRING" value="policyException"/>
    </case>
    <default>
      <log category="ERROR" level="custom">
        <property name="ERROR" value="invalid exception type. Should be either policy or service exception"/>
      </log>
      <sequence key="com.wso2telco.dep.common.response.unexpectedError.Sequence"/>
    </default>
  </switch>
  <payloadFactory media-type="json">
    <format>
{
    "requestError": {
        "$1": {
            "messageId": "$2",
            "text": "$3",
            "variables": "$4"
        }
    }
}
		</format>
    <args>
      <arg evaluator="xml" expression="get-property('exceptionType')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml" expression="get-property('messageId')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml" expression="get-property('errorText')" xmlns:ns="http://org.apache.synapse/xsd"/>
      <arg evaluator="xml" expression="get-property('errorVariable')" xmlns:ns="http://org.apache.synapse/xsd"/>
    </args>
  </payloadFactory>
  <property expression="$ctx:httpStatusCode" name="HTTP_SC"
    scope="axis2" type="STRING"/>
  <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
  <call-template target="com.wso2telco.dep.common.loggingExtension.Template">
      <with-param name="direction" value="RESPONSEOUT"/>
  </call-template>
  <call-template target="com.wso2telco.dep.common.main.response.datapublisher.Template">
      <with-param name="msisdn" value="{$ctx:MSISDN}"/>
      <with-param name="direction" value="nb"/>
  </call-template>
  <respond/>
</sequence>
